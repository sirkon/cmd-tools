
/*
 This file was autogenerated via
 -------------------------------
 ldetool generate branch.lde
 -------------------------------
 do not touch it with bare hands!
*/

package main

import ()

// Branch ...
type Branch struct {
	Rest []byte
	Head struct {
		Valid bool
	}
	Name string
}

// Extract ...
func (p *Branch) Extract(line []byte) (bool, error) {
	p.Rest = line
	var headPassCounter int
	var headPassValue byte
	var rest1 []byte
	rest1 = p.Rest

	// Checks if the rest starts with '*' and pass it
	if len(rest1) >= 1 && rest1[0] == '*' {
		rest1 = rest1[1:]
	} else {
		p.Head.Valid = false
		goto branchHeadLabel
	}
	p.Head.Valid = true
	p.Rest = rest1
branchHeadLabel:

	// Pass all characters ' ' at the rest start
	for headPassCounter, headPassValue = range p.Rest {
		if headPassValue != ' ' {
			break
		}
	}
	if headPassCounter > 0 {
		p.Rest = p.Rest[headPassCounter:]
	}

	// Take the rest as Name(str)
	p.Name = string(p.Rest)
	p.Rest = p.Rest[len(p.Rest):]
	return true, nil
}
